# Generated by Django 4.2.8 on 2024-01-09 12:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("documents", "1043_alter_savedviewfilterrule_rule_type"),
    ]

    operations = [
        migrations.AddField(
            model_name="document",
            name="due_date",
            field=models.DateTimeField(
                default=django.utils.timezone.now, null=True, verbose_name="due_date"
            ),
        ),
        migrations.AddField(
            model_name="log",
            name="due_date",
            field=models.DateTimeField(
                default=django.utils.timezone.now, null=True, verbose_name="due_date"
            ),
        ),
        migrations.AlterField(
            model_name="savedviewfilterrule",
            name="rule_type",
            field=models.PositiveIntegerField(
                choices=[
                    (0, "title contains"),
                    (1, "content contains"),
                    (2, "ASN is"),
                    (3, "correspondent is"),
                    (4, "document type is"),
                    (5, "is in inbox"),
                    (6, "has tag"),
                    (7, "has any tag"),
                    (8, "created before"),
                    (9, "created after"),
                    (10, "created year is"),
                    (11, "created month is"),
                    (12, "created day is"),
                    (13, "added before"),
                    (14, "added after"),
                    (15, "modified before"),
                    (16, "modified after"),
                    (17, "does not have tag"),
                    (18, "does not have ASN"),
                    (19, "title or content contains"),
                    (20, "fulltext query"),
                    (21, "more like this"),
                    (22, "has tags in"),
                    (23, "ASN greater than"),
                    (24, "ASN less than"),
                    (25, "storage path is"),
                    (26, "has correspondent in"),
                    (27, "does not have correspondent in"),
                    (28, "has document type in"),
                    (29, "does not have document type in"),
                    (30, "has storage path in"),
                    (31, "does not have storage path in"),
                    (32, "owner is"),
                    (33, "has owner in"),
                    (34, "does not have owner"),
                    (35, "does not have owner in"),
                    (36, "has custom field value"),
                    (37, "is shared by me"),
                    (38, "legal entity is"),
                    (39, "has legal entity in"),
                    (40, "does not have legal entity in"),
                    (41, "due date before"),
                    (42, "due date after"),
                    (43, "due date year is"),
                    (44, "due date month is"),
                    (45, "due date day is"),
                ],
                verbose_name="rule type",
            ),
        ),
        migrations.CreateModel(
            name="LegalEntity",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="name")),
                (
                    "match",
                    models.CharField(blank=True, max_length=256, verbose_name="match"),
                ),
                (
                    "matching_algorithm",
                    models.PositiveIntegerField(
                        choices=[
                            (0, "None"),
                            (1, "Any word"),
                            (2, "All words"),
                            (3, "Exact match"),
                            (4, "Regular expression"),
                            (5, "Fuzzy word"),
                            (6, "Automatic"),
                        ],
                        default=1,
                        verbose_name="matching algorithm",
                    ),
                ),
                (
                    "is_insensitive",
                    models.BooleanField(default=True, verbose_name="is insensitive"),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="owner",
                    ),
                ),
            ],
            options={
                "verbose_name": "legal entity",
                "verbose_name_plural": "legal entities",
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="document",
            name="legal_entity",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="documents",
                to="documents.legalentity",
                verbose_name="legal_entity",
            ),
        ),
        migrations.AddConstraint(
            model_name="legalentity",
            constraint=models.UniqueConstraint(
                fields=("name", "owner"), name="documents_legalentity_unique_name_owner"
            ),
        ),
        migrations.AddConstraint(
            model_name="legalentity",
            constraint=models.UniqueConstraint(
                condition=models.Q(("owner__isnull", True)),
                fields=("name",),
                name="documents_legalentity_name_uniq",
            ),
        ),
    ]
